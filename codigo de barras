
#include <iostream>
#include <string>

using namespace std;

// Função para verificar se o código possui exatamente 13 dígitos numéricos
bool isValidEAN13(const string& code) {
    if (code.length() != 13) {
        return false;
    }
    for (char c : code) {
        if (!isdigit(c)) {
            return false;
        }
    }
    return true;
}

// Função para calcular o dígito verificador do código EAN-13
int calculateCheckDigit(const string& code) {
    int sum = 0;
    for (int i = 0; i < 12; ++i) {
        int digit = code[i] - '0'; // Converte o caractere para inteiro
        if (i % 2 == 0) {
            sum += digit; // Dígitos nas posições pares (0, 2, 4, ...) são somados diretamente
        } else {
            sum += digit * 3; // Dígitos nas posições ímpares (1, 3, 5, ...) são multiplicados por 3 antes de somar
        }
    }
    // Calcula o dígito verificador
    int checkDigit = (10 - (sum % 10)) % 10;
    return checkDigit;
}

int main() {
    string code;
    
    cout << "Digite o código de barras EAN-13 (13 dígitos): ";
    cin >> code;
    
    if (!isValidEAN13(code)) {
        cout << "Código inválido. Certifique-se de que possui exatamente 13 dígitos numéricos." << endl;
        return 1;
    }
    
    // Obtém o dígito verificador calculado
    int calculatedCheckDigit = calculateCheckDigit(code);
    
    // Obtém o dígito verificador fornecido no código
    int providedCheckDigit = code[12] - '0'; // Converte o caractere para inteiro
    
    // Imprime o dígito verificador calculado
    cout << "Dígito verificador calculado: " << calculatedCheckDigit << endl;
    
    // Verifica se o dígito verificador está correto
    if (calculatedCheckDigit == providedCheckDigit) {
        cout << "Código de barras válido!" << endl;
    } else {
        cout << "Código de barras inválido!" << endl;
    }
    
    return 0;
}
