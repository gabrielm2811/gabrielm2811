#include <iostream>
#include <string>
#include <stdexcept>

int calcularDigitoVerificador(const std::string& codigo) {
    if (codigo.length() != 12) {
        throw std::invalid_argument("O código deve ter exatamente 12 dígitos.");
    }

    int soma = 0;

    for (size_t i = 0; i < codigo.length(); ++i) {
        char digitoChar = codigo[i];
        if (!isdigit(digitoChar)) {
            throw std::invalid_argument("O código deve conter apenas dígitos.");
        }
        
        int digito = digitoChar - '0'; // Converte o caractere para um número
        if (i % 2 == 0) {
            soma += digito; // Posições ímpares (0, 2, 4, 6, 8, 10)
        } else {
            soma += digito * 3; // Posições pares (1, 3, 5, 7, 9, 11)
        }
    }

    int digitoVerificador = (10 - (soma % 10)) % 10;
    return digitoVerificador;
}

int main() {
    std::string codigo;

    std::cout << "Digite os 12 primeiros dígitos do código de barras: ";
    std::cin >> codigo;

    try {
        int digitoVerificador = calcularDigitoVerificador(codigo);
        std::cout << "O dígito verificador é: " << digitoVerificador << std::endl;
    } catch (const std::invalid_argument& e) {
        std::cerr << "Erro: " << e.what() << std::endl;
    }

    return 0;
}
